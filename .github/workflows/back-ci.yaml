name: Build, Test, and Deploy Backend

on:
  push:
    branches:
      - develop
    paths:
      - 'code-pulse-api/**'
  pull_request:
    branches:
      - develop
    paths:
      - 'code-pulse-api/**'

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run Unit Tests
        run: mvn test
        working-directory: ./code-pulse-api
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/test_db
          SPRING_DATASOURCE_USERNAME: test_user
          SPRING_DATASOURCE_PASSWORD: test_password

      - name: Build with Maven
        run: mvn clean install -DskipTests
        working-directory: ./code-pulse-api
        
      - name: Run tests with H2 (dev profile)
        run: mvn test -Dspring.profiles.active=prod
        working-directory: ./code-pulse-api

      - name: Run tests with PostgreSQL (prod profile)
        run: mvn test -Dspring.profiles.active=dev
        working-directory: ./code-pulse-api

    

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./code-pulse-api
          push: true
          tags: ${{ secrets.DOCKER_IMAGE_NAME_BACKEND }}
